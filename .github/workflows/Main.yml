name: Main

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/Main.yml
      - .github/workflows/Release.yml
      - src/**
      - tests/**
      - CMakeLists.txt
      - conanfile.txt

jobs:
  test:
    name: Build, Lint, and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y clang-tidy cmake g++ python3-pip lcov
          pip install conan

      - name: Configure Conan profile
        run: |
          conan profile detect --force

      - name: Install dependencies with Conan
        run: |
          conan install . --output-folder=build --build=missing

      - name: Configure project with CMake
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
                -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake

      - name: Run clang-tidy
        run: |
          clang-tidy src/*.cpp -- -Iinclude

      - name: Build project
        run: cmake --build build --config Release

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

      - name: Capture coverage report
        run: |
          lcov --directory build --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/conan/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.info
          token: ${{ secrets.CODECOV_TOKEN }} # если репозиторий приватный
          flags: unittests
          fail_ci_if_error: true
          slug: kretoffer/bloxoff-engine
